#!/usr/bin/env ruby

# sync output
$stdout.sync = true

$:.unshift File.expand_path("../../lib", __FILE__)
require "language_pack"

bin_dir = File.expand_path("..", __FILE__)
build_dir = ARGV[0]
puts "Building mcrypt at dir #{bin_dir}"
puts ""
puts "*"
puts __FILE__
puts ARGV[0]
puts ARGV[1]
puts "*"
puts `cd /; ls -l`
puts "*"
puts `cd #{ARGV[1]}; ls -l`
puts "*"
puts `cd #{bin_dir}; ls -l`
puts "*"
puts "#{`cd #{ARGV[0]}; ls`}"
puts "*"
puts "Building mcrypt in BinDir: #{bin_dir}"
puts "                to BuildDir: #{build_dir}"
`cd #{bin_dir}; build-mcrypt #{build_dir}/vendor/mcrypt`
puts "mcrypt built"
puts "Listing ~/.bundle:"
puts `ls -l ~/.bundle`
puts "---"
# `mkdir ~/.bundle`
`echo build.ruby-mcrypt --with-mcrypt-include=#{build_dir}/vendor/mcrypt/include --with-mcrypt-lib=#{build_dir}/vendor/mcrypt/lib >> ~/.bundle/config`
# `bundle config build.ruby-mcrypt --with-mcrypt-include=#{build_dir}/vendor/mcrypt/include --with-mcrypt-lib=#{build_dir}/vendor/mcrypt/lib`

puts "---"
puts "Listing #{build_dir}/.bundle:"
`mkdir #{build_dir}/.bundle`
# ---
# BUNDLE_BUILD__RUBY-MCRYPT: "--with-mcrypt-include=#{build_dir}/vendor/mcrypt/include
#  --with-mcrypt-lib=#{build_dir}/vendor/mcrypt/lib"
`echo "---" > #{build_dir}/.bundle/.config`
`echo "BUNDLE_BUILD__RUBY-MCRYPT: \\"--with-mcrypt-include=#{build_dir}/vendor/mcrypt/include" > #{build_dir}/.bundle/.config`
`echo "  --with-mcrypt-lib=#{build_dir}/vendor/mcrypt/lib\\"" > #{build_dir}/.bundle/.config`
# build.ruby-mcrypt --with-mcrypt-include=#{build_dir}/vendor/mcrypt/include --with-mcrypt-lib=#{build_dir}/vendor/mcrypt/lib >> #{build_dir}/.bundle/config`

LanguagePack::Instrument.trace 'compile', 'app.compile' do
  if pack = LanguagePack.detect(ARGV[0], ARGV[1])
    pack.topic("Compiling #{pack.name}")
    pack.log("compile") do
      pack.compile
    end
  end
end
puts "mcrypt still exists?"

puts "---"
puts `ls #{bin_dir}`
puts "---"
puts `ls #{build_dir}`
puts "---"
